class Fibre{constructor(e,t){this.i=t,this.brush=e,this.sizeStrokeFibre=e.area.sizeStroke+getRandomFromInterval(-e.area.fibreStrokeSizeNoise,e.area.fibreStrokeSizeNoise),this.startX=e.brushPosX+noise(this.i*e.area.fibreLengthPerlin)*e.area.fibreStartLengthNoise-e.area.fibreStartLengthNoise,this.startY=e.brushPosY+noise(this.i*e.area.fibreLengthPerlin)*e.area.fibreStartLengthNoise-e.area.fibreStartLengthNoise,this.fibreLength=e.brushLength_,this.colorFibre=brightenColor(distortColor(color(e.colorBrush),e.area.fibreColorNoise),e.area.fibreBrightnessNoise),this.colorFibre=color(red(this.colorFibre),green(this.colorFibre),blue(this.colorFibre),noise(this.i*e.area.fibreOpacityPerlin)*(255-e.area.fibreOpacityNoiseBase)+e.area.fibreOpacityNoiseBase),this.angleFibre=e.angle+getRandomFromInterval(-e.area.fibreRotationNoise,e.area.fibreRotationNoise)}}class Brush{constructor(e,t,s,r){this.area=e,this.brushPosX=t,this.brushPosY=s,this.colorBrush=brightenColor(distortColor(color(this.area.colorObject),this.area.colorNoise),this.area.brightnessNoise),this.brushLength_=this.area.brushLength+getRandomFromInterval(-this.area.brushLength*this.area.brushLengthNoise,this.area.brushLength*this.area.brushLengthNoise),this.numberFibres_=this.area.numberFibres+getRandomFromInterval(-this.area.numberFibres*this.area.brushBreadthNoise,this.area.numberFibres*this.area.brushBreadthNoise),this.angle=getRandomFromInterval(-this.area.brushAngleNoise,this.area.brushAngleNoise),this.fibres=[],r>0&&fxrand()>.85&&"horizontal"==this.area.orientation&&(this.brushPosX=getRandomFromInterval(this.area.overlap/2,this.area.custom_width-this.brushLength_-this.area.overlap/2),this.brushPosY=getRandomFromInterval(this.area.overlap/2,this.area.custom_height-this.numberFibres_*this.area.brushFibreSparseness-this.area.overlap/2)),r>0&&fxrand()>.85&&"vertical"==this.area.orientation&&(this.brushPosX=getRandomFromInterval(this.area.overlap/2,this.area.custom_width-this.numberFibres_*this.area.brushFibreSparseness-this.area.overlap/2),this.brushPosY=getRandomFromInterval(this.area.overlap/2,this.area.custom_height-this.brushLength_-this.area.overlap/2)),noiseSeed(NOISESEED+10*fxrand());for(var i=0;i<this.numberFibres_;i++)this.fibres.push(new Fibre(this,i));noiseSeed(NOISESEED)}}class PaintBrushArea{constructor(e){if(void 0===e&&(e={custom_width:800,custom_height:800,posX:100,posY:100,colorObject:color1,orientation:"vertical",brushLength:150,brushBreadth:150,sizeStroke:2,numberPaintLayers:2,overlap:20,brightnessNoise:5,colorNoise:5,opacityBoost:0,brushLengthNoise:.2,brushBreadthNoise:.2,brushAngleNoise:PI/20,brushFibreSparseness:6,fibreColorNoise:2,fibreBrightnessNoise:2,fibreStrokeSizeNoise:1,fibreStartLengthNoise:15,fibreBreadthNoise:.5,fibreRotationNoise:PI/200,fibreOpacityNoiseBase:150}),this.custom_width=e.custom_width,this.custom_height=e.custom_height,this.posX=e.posX,this.posY=e.posY,this.colorObject=color(e.colorObject),this.orientation=e.orientation,this.brushLength=e.brushLength,this.brushBreadth=e.brushBreadth,this.sizeStroke=e.sizeStroke,this.numberPaintLayers=e.numberPaintLayers,this.overlap=e.overlap,this.brightnessNoise=e.brightnessNoise,this.colorNoise=e.colorNoise,this.opacityBoost=e.opacityBoost,this.brushFibreSparseness=e.brushFibreSparseness,this.brushLengthNoise=e.brushLengthNoise,this.brushBreadthNoise=e.brushBreadthNoise,this.brushAngleNoise=e.brushAngleNoise,this.fibreColorNoise=e.fibreColorNoise,this.fibreBrightnessNoise=e.fibreBrightnessNoise,this.fibreStrokeSizeNoise=e.fibreStrokeSizeNoise,this.fibreStartLengthNoise=e.fibreStartLengthNoise,this.fibreBreadthNoise=e.fibreBreadthNoise,this.fibreRotationNoise=e.fibreRotationNoise,this.fibreOpacityNoiseBase=e.fibreOpacityNoiseBase,this.fibreLengthPerlin=e.fibreLengthPerlin,this.fibreOpacityPerlin=e.fibreOpacityPerlin,"horizontal"==this.orientation){var t=this.custom_width/this.brushLength;this.brushLength=this.custom_width/t;var s=this.custom_height/this.brushBreadth;this.brushBreadth=this.custom_height/s}else"vertical"==this.orientation&&(s=this.custom_height/this.brushBreadth,this.brushLength=this.custom_height/s,t=this.custom_width/this.brushLength,this.brushBreadth=this.custom_width/t);this.numberFibres=this.brushBreadth/this.brushFibreSparseness,this.brushStrokes=[],this.createBrushes()}createBrushes(){for(let e=0;e<this.numberPaintLayers;e+=1)if("horizontal"==this.orientation)for(let t=0;t<this.custom_width;t+=this.brushLength)for(let s=0;s<this.custom_height;s+=this.brushBreadth)this.brushStrokes.push(new Brush(this,t,s,e));else if("vertical"==this.orientation)for(let t=0;t<this.custom_height;t+=this.brushLength)for(let s=0;s<this.custom_width;s+=this.brushBreadth)this.brushStrokes.push(new Brush(this,s,t,e))}show(){for(var e of this.brushStrokes){for(var t of(1==GRIDVISIBLE&&(buffer.push(),buffer.strokeWeight(1),buffer.stroke(color(20,50)),buffer.noFill(),buffer.translate((this.posX-this.custom_width/2+e.brushPosX)/exportRatio,(this.posY-this.custom_height/2+e.brushPosY)/exportRatio),buffer.rect(0,0,this.brushLength/exportRatio,this.brushBreadth/exportRatio),buffer.pop()),e.fibres))buffer.push(),"horizontal"==this.orientation?(buffer.translate((this.posX-this.custom_width/2+t.startX)/exportRatio,(this.posY-this.custom_height/2+e.brushPosY)/exportRatio),buffer.rotate(t.angleFibre)):"vertical"==this.orientation&&(buffer.translate((this.posX-this.custom_width/2+e.brushPosX)/exportRatio,(this.posY-this.custom_height/2+t.startY)/exportRatio),buffer.rotate(t.angleFibre/PI/2)),buffer.stroke(t.colorFibre),buffer.strokeWeight(t.sizeStrokeFibre),exportRatio,buffer.noFill(),"horizontal"==this.orientation?buffer.line(0,this.brushFibreSparseness/exportRatio*t.i,t.fibreLength/exportRatio,this.brushFibreSparseness/exportRatio*t.i):"vertical"==this.orientation&&buffer.line(this.brushFibreSparseness/exportRatio*t.i,0,this.brushFibreSparseness/exportRatio*t.i,t.fibreLength/exportRatio),buffer.pop();logging.getLevel()<=1&&(buffer.push(),buffer.strokeWeight(1),exportRatio,buffer.noFill(),buffer.translate((this.posX-this.custom_width/2+e.brushPosX)/exportRatio,(this.posY-this.custom_height/2+e.brushPosY)/exportRatio),buffer.rect(0,0,this.brushLength/exportRatio,this.brushBreadth/exportRatio),buffer.pop())}logging.getLevel()<=1&&(buffer.push(),buffer.rectMode(CENTER),buffer.fill("purple"),buffer.translate(this.posX/exportRatio,this.posY/exportRatio),buffer.rect(0,0,this.custom_width/exportRatio,this.custom_height/exportRatio),buffer.pop())}}